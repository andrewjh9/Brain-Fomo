#!/bin/bash

#SBATCH --partition=gpu_a100
#SBATCH --gpus=1
#SBATCH --job-name=env
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=9
#SBATCH --time=02:00:00
#SBATCH --output=%x_%j.out

module purge
module load 2022
module load CUDA/11.8.0
module load cuDNN/8.6.0.163-CUDA-11.8.0

echo "--- Environment After Loading Modules ---"
echo "Loaded modules:"
module list
echo "----------------------------------------"
echo "CUDA_HOME is set to: $CUDA_HOME"
echo "Path to nvcc: $(which nvcc)"
echo "----------------------------------------"

echo "--- Installing Miniconda if not already installed ---"
cd $HOME
if [ ! -d "$HOME/miniconda3" ]; then
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    bash miniconda.sh -b -p $HOME/miniconda3
fi
echo "----------------------------------------"

export PATH="$HOME/miniconda3/bin:$PATH"
eval "$(conda shell.bash hook)"

# if ! conda info --envs | grep -q labram_pretrain; then
#     conda create -n labram_pretrain python=3.11 -y
# fi

conda activate labram_pretrain
echo "Activated conda environment: $CONDA_DEFAULT_ENV"
echo "Python version: $(python --version)"
echo "Python path: $(which python)"
echo "Pip path: $(which pip3)"

echo "--- Checking PyTorch GPU Access ---"
srun python -uc "import torch; print(f'PyTorch version: {torch.__version__}'); print(f'CUDA available? {torch.cuda.is_available()}'); print(f'CUDA version built with: {torch.version.cuda}'); print(f'Device name: {torch.cuda.get_device_name(0) if torch.cuda.is_available() else None}')"
echo "---------------------------------"

echo "--- Installing DeepSpeed ---"
conda install pytorch==2.0.1 torchvision==0.15.2 torchaudio==2.0.2 pytorch-cuda=11.8 -c pytorch -c nvidia
conda install tensorboard
cd $HOME
pip install -r pascal/environment/requirements.txt
echo "----------------------------"
echo "--- Verifying TensorBoard Installation ---"
python -c "import tensorboard; print(f'TensorBoard version: {tensorboard.__version__}')"
if [ $? -ne 0 ]; then
    echo "ERROR: TensorBoard is not installed in the current environment!"
    exit 1
fi
echo "TensorBoard successfully imported."
echo "-----------------------------------------"


